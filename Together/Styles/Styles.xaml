<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes">

    <!-- Custom Color Palette -->
    <Color x:Key="PrimaryColor">#673AB7</Color>
    <!-- Deep Purple -->
    <Color x:Key="PrimaryLightColor">#9575CD</Color>
    <Color x:Key="PrimaryDarkColor">#512DA8</Color>
    <Color x:Key="SecondaryColor">#FF4081</Color>
    <!-- Pink Accent -->
    <Color x:Key="SecondaryLightColor">#FF80AB</Color>
    <Color x:Key="SecondaryDarkColor">#F50057</Color>
    
    <SolidColorBrush x:Key="PrimaryBrush" Color="{StaticResource PrimaryColor}"/>
    <SolidColorBrush x:Key="PrimaryLightBrush" Color="{StaticResource PrimaryLightColor}"/>
    <SolidColorBrush x:Key="PrimaryDarkBrush" Color="{StaticResource PrimaryDarkColor}"/>
    <SolidColorBrush x:Key="SecondaryBrush" Color="{StaticResource SecondaryColor}"/>
    <SolidColorBrush x:Key="SecondaryLightBrush" Color="{StaticResource SecondaryLightColor}"/>
    <SolidColorBrush x:Key="SecondaryDarkBrush" Color="{StaticResource SecondaryDarkColor}"/>

    <!-- Typography Styles -->
    <Style x:Key="HeadlineTextStyle" TargetType="TextBlock" BasedOn="{StaticResource MaterialDesignHeadline4TextBlock}">
        <Setter Property="FontSize" Value="34"/>
        <Setter Property="FontWeight" Value="Regular"/>
        <Setter Property="Margin" Value="0,0,0,16"/>
    </Style>

    <Style x:Key="TitleTextStyle" TargetType="TextBlock" BasedOn="{StaticResource MaterialDesignHeadline5TextBlock}">
        <Setter Property="FontSize" Value="24"/>
        <Setter Property="FontWeight" Value="Medium"/>
        <Setter Property="Margin" Value="0,0,0,12"/>
    </Style>

    <Style x:Key="SubtitleTextStyle" TargetType="TextBlock" BasedOn="{StaticResource MaterialDesignHeadline6TextBlock}">
        <Setter Property="FontSize" Value="20"/>
        <Setter Property="FontWeight" Value="Medium"/>
        <Setter Property="Margin" Value="0,0,0,8"/>
    </Style>

    <Style x:Key="BodyTextStyle" TargetType="TextBlock" BasedOn="{StaticResource MaterialDesignBody1TextBlock}">
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="FontWeight" Value="Regular"/>
        <Setter Property="LineHeight" Value="20"/>
    </Style>

    <Style x:Key="CaptionTextStyle" TargetType="TextBlock" BasedOn="{StaticResource MaterialDesignCaptionTextBlock}">
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="FontWeight" Value="Regular"/>
        <Setter Property="Opacity" Value="0.6"/>
    </Style>

    <!-- Card Style with Elevation -->
    <Style x:Key="CardStyle" TargetType="materialDesign:Card">
        <Setter Property="Padding" Value="16"/>
        <Setter Property="Margin" Value="8"/>
        <Setter Property="UniformCornerRadius" Value="8"/>
        <Setter Property="materialDesign:ElevationAssist.Elevation" Value="Dp2"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="materialDesign:ElevationAssist.Elevation" Value="Dp4"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- Loading Indicator Style -->
    <Style x:Key="LoadingProgressStyle" TargetType="ProgressBar" BasedOn="{StaticResource MaterialDesignCircularProgressBar}">
        <Setter Property="Width" Value="48"/>
        <Setter Property="Height" Value="48"/>
        <Setter Property="IsIndeterminate" Value="True"/>
        <Setter Property="Foreground" Value="{StaticResource PrimaryBrush}"/>
    </Style>

    <!-- Empty State Container -->
    <Style x:Key="EmptyStateContainerStyle" TargetType="StackPanel">
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Margin" Value="32"/>
    </Style>

    <!-- Empty State Icon -->
    <Style x:Key="EmptyStateIconStyle" TargetType="materialDesign:PackIcon">
        <Setter Property="Width" Value="96"/>
        <Setter Property="Height" Value="96"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="Foreground" Value="{DynamicResource MaterialDesignBodyLight}"/>
        <Setter Property="Opacity" Value="0.3"/>
        <Setter Property="Margin" Value="0,0,0,16"/>
    </Style>

    <!-- Empty State Text -->
    <Style x:Key="EmptyStateTitleStyle" TargetType="TextBlock" BasedOn="{StaticResource TitleTextStyle}">
        <Setter Property="TextAlignment" Value="Center"/>
        <Setter Property="Opacity" Value="0.6"/>
    </Style>

    <Style x:Key="EmptyStateMessageStyle" TargetType="TextBlock" BasedOn="{StaticResource BodyTextStyle}">
        <Setter Property="TextAlignment" Value="Center"/>
        <Setter Property="Opacity" Value="0.5"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
        <Setter Property="MaxWidth" Value="400"/>
    </Style>

    <!-- Smooth Fade In Animation -->
    <Storyboard x:Key="FadeInAnimation">
        <DoubleAnimation Storyboard.TargetProperty="Opacity"
                         From="0" To="1"
                         Duration="0:0:0.3"
                         AccelerationRatio="0.2"
                         DecelerationRatio="0.8"/>
    </Storyboard>

    <!-- Smooth Slide In Animation -->
    <Storyboard x:Key="SlideInAnimation">
        <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.Y)"
                         From="20" To="0"
                         Duration="0:0:0.3"
                         AccelerationRatio="0.2"
                         DecelerationRatio="0.8"/>
        <DoubleAnimation Storyboard.TargetProperty="Opacity"
                         From="0" To="1"
                         Duration="0:0:0.3"
                         AccelerationRatio="0.2"
                         DecelerationRatio="0.8"/>
    </Storyboard>

    <!-- Scale Animation for Buttons -->
    <Storyboard x:Key="ScaleUpAnimation">
        <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)"
                         From="0.95" To="1"
                         Duration="0:0:0.2"/>
        <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)"
                         From="0.95" To="1"
                         Duration="0:0:0.2"/>
    </Storyboard>

    <!-- Animated Button Style -->
    <Style x:Key="AnimatedButtonStyle" TargetType="Button" BasedOn="{StaticResource MaterialDesignRaisedButton}">
        <Setter Property="RenderTransformOrigin" Value="0.5,0.5"/>
        <Setter Property="RenderTransform">
            <Setter.Value>
                <ScaleTransform ScaleX="1" ScaleY="1"/>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <EventTrigger RoutedEvent="Button.Loaded">
                <BeginStoryboard Storyboard="{StaticResource ScaleUpAnimation}"/>
            </EventTrigger>
        </Style.Triggers>
    </Style>

    <!-- Smooth Transition for Content -->
    <Style x:Key="TransitionContentStyle" TargetType="ContentControl">
        <Setter Property="RenderTransform">
            <Setter.Value>
                <TranslateTransform Y="0"/>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <EventTrigger RoutedEvent="ContentControl.Loaded">
                <BeginStoryboard Storyboard="{StaticResource SlideInAnimation}"/>
            </EventTrigger>
        </Style.Triggers>
    </Style>

    <!-- List Item Animation -->
    <Style x:Key="AnimatedListItemStyle" TargetType="ListBoxItem" BasedOn="{StaticResource MaterialDesignListBoxItem}">
        <Setter Property="Opacity" Value="0"/>
        <Setter Property="RenderTransform">
            <Setter.Value>
                <TranslateTransform Y="10"/>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <EventTrigger RoutedEvent="ListBoxItem.Loaded">
                <BeginStoryboard>
                    <Storyboard>
                        <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                         To="1"
                                         Duration="0:0:0.3"/>
                        <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.Y)"
                                         To="0"
                                         Duration="0:0:0.3"/>
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
        </Style.Triggers>
    </Style>

    <!-- Responsive Grid Styles -->
    <Style x:Key="ResponsiveCardGridStyle" TargetType="ItemsControl">
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <WrapPanel Orientation="Horizontal"/>
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Elevated Card with Hover Effect -->
    <Style x:Key="InteractiveCardStyle" TargetType="materialDesign:Card" BasedOn="{StaticResource CardStyle}">
        <Setter Property="Cursor" Value="Hand"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="materialDesign:ElevationAssist.Elevation" Value="Dp8"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- Section Header Style -->
    <Style x:Key="SectionHeaderStyle" TargetType="TextBlock" BasedOn="{StaticResource SubtitleTextStyle}">
        <Setter Property="Foreground" Value="{StaticResource PrimaryBrush}"/>
        <Setter Property="Margin" Value="0,16,0,8"/>
    </Style>

    <!-- Divider Style -->
    <Style x:Key="DividerStyle" TargetType="Separator" BasedOn="{StaticResource MaterialDesignSeparator}">
        <Setter Property="Margin" Value="0,8,0,8"/>
    </Style>

    <!-- Floating Action Button Style -->
    <Style x:Key="FabStyle" TargetType="Button" BasedOn="{StaticResource MaterialDesignFloatingActionButton}">
        <Setter Property="Background" Value="{StaticResource SecondaryBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource SecondaryBrush}"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Width" Value="56"/>
        <Setter Property="Height" Value="56"/>
        <Setter Property="materialDesign:ElevationAssist.Elevation" Value="Dp6"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="materialDesign:ElevationAssist.Elevation" Value="Dp12"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- Chip Style -->
    <Style x:Key="CustomChipStyle" TargetType="materialDesign:Chip" BasedOn="{StaticResource MaterialDesignChip}">
        <Setter Property="Margin" Value="4"/>
        <Setter Property="Background" Value="{StaticResource PrimaryLightBrush}"/>
        <Setter Property="Foreground" Value="White"/>
    </Style>

    <!-- Badge Style -->
    <Style x:Key="BadgeStyle" TargetType="materialDesign:Badged">
        <Setter Property="BadgeBackground" Value="{StaticResource SecondaryBrush}"/>
        <Setter Property="BadgeForeground" Value="White"/>
    </Style>

    <!-- Snackbar Style -->
    <Style x:Key="CustomSnackbarStyle" TargetType="materialDesign:Snackbar" BasedOn="{StaticResource MaterialDesignSnackbar}">
        <Setter Property="Background" Value="{DynamicResource MaterialDesignDarkBackground}"/>
        <Setter Property="Foreground" Value="White"/>
    </Style>

</ResourceDictionary>
